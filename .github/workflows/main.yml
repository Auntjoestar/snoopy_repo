name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-django:
    name: Test Django Project
    runs-on: ubuntu-latest
    env:
      DB_HOST: testhost
      DB_PORT: 5432
      DB_NAME: testname
      DB_USER: testuser
      DB_PASSWORD: testpassword
      ALLOWED_HOSTS:  "['127.0.0.1', 'localhost', '0.0.0.0']"
      HTTP_SERVER: 8000

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.X"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django Tests
        run: |
          python manage.py test snoopy_images/

  test-docker-compose:
    name: Test Docker Compose (Dev and Prod)
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: testdb
        ports:
          - "5432:5432"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Test Docker Compose Dev
        run: |
          docker compose -f docker-compose-dev.yml up -d
          docker compose -f docker-compose-dev.yml ps
          docker compose -f docker-compose-dev.yml exec snoopy python manage.py test snoopy_images/
          docker compose -f docker-compose-dev.yml down

      - name: Test Docker Compose Prod
        run: |
          docker compose -f docker-compose.yml up -d
          docker compose -f docker-compose.yml ps
          docker compose -f docker-compose.yml exec snoopy python manage.py test snoopy_images/
          docker compose -f docker-compose.yml down

  build-and-push-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/snoopy:latest -f DOCKERFILE .
          docker push ${{ secrets.DOCKER_USERNAME }}/snoopy:latest
