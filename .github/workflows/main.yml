name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-django:
    name: Test Django Project with PostgreSQL
    runs-on: ubuntu-latest
    env:
      DB_HOST: localhost
      DB_PORT: 5432
      DB_NAME: testdb
      DB_USER: test
      DB_PASSWORD: test
      ALLOWED_HOSTS: "['127.0.0.1', 'localhost', '0.0.0.0']"
      HTTP_SERVER: 8000

    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: testdb
        ports:
          - "5432:5432"
        options: >-
          --health-cmd="pg_isready -U test"
          --health-timeout=30s
          --health-start-period=10s
          --health-retries=5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.X"  

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h $DB_HOST -p $DB_PORT -U $DB_USER; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done

      - name: Run Django Tests
        run: |
          python manage.py test snoopy_images/

  test-docker-compose:
    name: Test Docker Compose (Dev and Prod)
    runs-on: ubuntu-latest

    services:
      charlie:
        image: postgres:latest
        env:
          DB_NAME: testdb
          DB_USER: test
          DB_PASSWORD: test
        ports:
          - "5432:5432"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
    
      - name: Set up environment variables
        run: |
          echo "DB_HOST=charlie" >> $GITHUB_ENV
          echo "DB_PORT=5432" >> $GITHUB_ENV
          echo "DB_NAME=testdb" >> $GITHUB_ENV
          echo "DB_USER=test" >> $GITHUB_ENV
          echo "DB_PASSWORD=test" >> $GITHUB_ENV
          echo "ALLOWED_HOSTS=['127.0.0.1', 'localhost', '0.0.0.0']" >> $GITHUB_ENV
          echo "HTTP_SERVER=8000" >> $GITHUB_ENV
    
      - name: Test Docker Compose Dev
        run: |
          docker compose -f docker-compose-dev.yml up -d
          docker compose -f docker-compose-dev.yml ps
          docker compose -f docker-compose-dev.yml exec snoopy python manage.py test snoopy_images/
          docker compose -f docker-compose-dev.yml down
    
      - name: Test Docker Compose Prod
        run: |
          docker compose -f docker-compose.yml up -d
          docker compose -f docker-compose.yml ps
          docker compose -f docker-compose.yml exec snoopy python manage.py test snoopy_images/
          docker compose -f docker-compose.yml down

      - name: Check PostgreSQL Logs
        run: |
          docker compose -f docker-compose-dev.yml logs charlie

  build-and-push-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/snoopy:latest -f DOCKERFILE .
          docker push ${{ secrets.DOCKER_USERNAME }}/snoopy:latest
